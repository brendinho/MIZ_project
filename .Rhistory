"reporting_delay"="Reporting Delay"
)) %>%
dplyr::mutate(variable_name = gsub(" +Year", "", variable_name))
hosp_together <- data.table(variable=rownames(hosp_table_ORs_confint), hosp_table_ORs_confint) %>%
dplyr::filter(!grepl("intercept", tolower(variable))) %>%
dplyr::mutate(
attribute = variable %>% gsub("age[^.]*", "Age", .) %>%
gsub("gender[^.]*", "Gender", .) %>%
gsub("reporting[^.]*", "Delay", .) %>%
gsub("wave[^.]*", "Wave", .),
variable_name = gsub("age_group|gender_group", "", variable)
) %>%
dplyr::mutate(variable_name = dplyr::recode(variable_name,
"male"="Male",
"female"="Female",
"noncis"="Other",
"wave2"="Wave 2",
"wave3"="Wave 3",
"reporting_delay"="Reporting Delay"
)) %>%
dplyr::mutate(variable_name = gsub(" +Years", "", variable_name))
hosp_bar <- ggplot(hosp_together, aes(x=variable_name, group=attribute)) +
geom_bar(aes(weight=OR), fill="0066CC") +
geom_errorbar(aes(ymin=`2.5 %`, ymax=`97.5 %`)) +
facet_wrap(.~attribute, scales="free") +
theme_bw() +
theme(
axis.text.x = element_text(angle=45, hjust=1),
axis.text = element_text(size=14),
axis.title = element_text(size=15),
strip.text = element_text(size=15)
) +
labs(x="Odds Ratio", y="Variable") +
scale_y_continuous(expand = c(0,0))
hosp_bar
hosp_together <- data.table(variable=rownames(hosp_table_ORs_confint), hosp_table_ORs_confint) %>%
dplyr::filter(!grepl("intercept", tolower(variable))) %>%
dplyr::mutate(
attribute = variable %>% gsub("age[^.]*", "Age", .) %>%
gsub("gender[^.]*", "Gender", .) %>%
gsub("reporting[^.]*", "Delay", .) %>%
gsub("wave[^.]*", "Wave", .),
variable_name = gsub("age_group|gender_group", "", variable)
) %>%
dplyr::mutate(variable_name = dplyr::recode(variable_name,
"male"="Male",
"female"="Female",
"noncis"="Other",
"wave2"="Wave 2",
"wave3"="Wave 3",
"reporting_delay"="Reporting Delay"
)) %>%
dplyr::mutate(variable_name = gsub(" +Years", "", variable_name))
ggsave(hosp_bar, file=file.path(PROJECT_FOLDER, "Graphs/hosp_bar.png"), width=15, height=6)
ggsave(hosp_bar, file=file.path(PROJECT_FOLDER, "Graphs/hosp_bar.png"), width=15, height=8)
hospitalisation_regression <- glm(
formula = ever_hospitalized ~ age_group + gender_group + wave + reporting_delay, # + neighbourhood_number,
data = raw_fsa_data, # |> dplyr::mutate(neighbourhood_number = factor(neighbourhood_number)),
family = binomial
)
hosp_table_ORs_confint <- exp(cbind(OR=coef(hospitalisation_regression), confint(hospitalisation_regression)))
hosp_together <- data.table(variable=rownames(hosp_table_ORs_confint), hosp_table_ORs_confint) %>%
dplyr::filter(!grepl("intercept", tolower(variable))) %>%
dplyr::mutate(
attribute = variable %>% gsub("age[^.]*", "Age", .) %>%
gsub("gender[^.]*", "Gender", .) %>%
gsub("reporting[^.]*", "Delay", .) %>%
gsub("wave[^.]*", "Wave", .),
variable_name = gsub("age_group|gender_group", "", variable)
) %>%
dplyr::mutate(variable_name = dplyr::recode(variable_name,
"male"="Male",
"female"="Female",
"noncis"="Other",
"wave2"="Wave 2",
"wave3"="Wave 3",
"reporting_delay"="Reporting Delay"
)) %>%
dplyr::mutate(variable_name = gsub(" +Years", "", variable_name))
hosp_table
hosp_togetjer
hosp_together
icu_given_hospital <- glm(
formula = ever_in_icu ~ age_group + gender_group + wave + reporting_delay,
data=raw_fsa_data,
family = binomial
)
hosp_together <- data.table(variable=rownames(hosp_table_ORs_confint), hosp_table_ORs_confint) %>%
dplyr::filter(!grepl("intercept|delay", tolower(variable))) %>%
dplyr::mutate(
attribute = variable %>% gsub("age[^.]*", "Age", .) %>%
gsub("gender[^.]*", "Gender", .) %>%
gsub("reporting[^.]*", "Delay", .) %>%
gsub("wave[^.]*", "Wave", .),
variable_name = gsub("age_group|gender_group", "", variable)
) %>%
dplyr::mutate(variable_name = dplyr::recode(variable_name,
"male"="Male",
"female"="Female",
"noncis"="Other",
"wave2"="Wave 2",
"wave3"="Wave 3",
"reporting_delay"="Reporting Delay"
)) %>%
dplyr::mutate(variable_name = gsub(" +Years", "", variable_name))
hosp_together
hosp_bar <- ggplot(hosp_together, aes(x=variable_name, group=attribute)) +
geom_bar(aes(weight=OR), fill="0066CC") +
geom_errorbar(aes(ymin=`2.5 %`, ymax=`97.5 %`)) +
facet_wrap(.~attribute, scales="free") +
theme_bw() +
theme(
axis.text.x = element_text(angle=45, hjust=1),
axis.text = element_text(size=14),
axis.title = element_text(size=15),
strip.text = element_text(size=15)
) +
labs(x="Odds Ratio", y="Variable") +
scale_y_continuous(expand = c(0,0))
ggsave(hosp_bar, file=file.path(PROJECT_FOLDER, "Graphs/hosp_bar.png"), width=15, height=8)
icu_given_hospital <- glm(
formula = ever_in_icu ~ age_group + gender_group + wave + reporting_delay,
data=raw_fsa_data,
family = binomial
)
icu_ORs_confint <- exp(cbind(OR=coef(icu_given_hospital), confint(icu_given_hospital)))
icu_together <- data.table(variable=rownames(icu_ORs_confint), icu_ORs_confint) %>%
dplyr::filter(!grepl("intercept", tolower(variable))) %>%
dplyr::mutate(
attribute = variable %>% gsub("age[^.]*", "Age", .) %>%
gsub("gender[^.]*", "Gender", .) %>%
gsub("reporting[^.]*", "Delay", .) %>%
gsub("wave[^.]*", "Wave", .),
variable_name = gsub("age_group|gender_group", "", variable)
) %>%
dplyr::mutate(variable_name = dplyr::recode(variable_name,
"male"="Male",
"female"="Female",
"noncis"="Other",
"wave2"="Wave 2",
"wave3"="Wave 3",
"reporting_delay"="Reporting Delay"
)) %>%
dplyr::mutate(variable_name = gsub(" +Years", "", variable_name))
icu_together <- data.table(variable=rownames(icu_ORs_confint), icu_ORs_confint) %>%
dplyr::filter(!grepl("intercept|delay", tolower(variable))) %>%
dplyr::mutate(
attribute = variable %>% gsub("age[^.]*", "Age", .) %>%
gsub("gender[^.]*", "Gender", .) %>%
gsub("reporting[^.]*", "Delay", .) %>%
gsub("wave[^.]*", "Wave", .),
variable_name = gsub("age_group|gender_group", "", variable)
) %>%
dplyr::mutate(variable_name = dplyr::recode(variable_name,
"male"="Male",
"female"="Female",
"noncis"="Other",
"wave2"="Wave 2",
"wave3"="Wave 3",
"reporting_delay"="Reporting Delay"
)) %>%
dplyr::mutate(variable_name = gsub(" +Years", "", variable_name))
icu_bar <- ggplot(icu_together, aes(x=variable_name, group=attribute)) +
geom_bar(aes(weight=OR), fill="0066CC") +
geom_errorbar(aes(ymin=`2.5 %`, ymax=`97.5 %`)) +
facet_wrap(.~attribute, scales="free") +
theme_bw() +
theme(
axis.text.x = element_text(angle=45, hjust=1),
axis.text = element_text(size=14),
axis.title = element_text(size=15),
strip.text = element_text(size=15)
) +
labs(x="Odds Ratio", y="Variable") +
scale_y_continuous(expand = c(0,0))
icu_bar
ggsave(icu_bar, file=file.path(PROJECT_FOLDER, "Graphs/icu_bar.png"), width=15, height=8)
age_and_gender_average_delays <- ggplot(
average_values |>
dplyr::rename(
"First" = wave_1_report_delay,
"Second" = wave_2_report_delay,
"Third" = wave_3_report_delay,
"Both" = total_report_delay,
quant = value
) %>%
dplyr::mutate(attribute = recode(attribute,  "gender"="Gender", "age"="Age")) %>%
melt(., id.vars=c("quant", "attribute")) |>
dplyr::relocate(attribute, quant) |>
dplyr::filter(attribute %in% c("Age", "Gender") & variable!="Both" & quant!="NOT LISTED, PLEASE SPECIFY") |>
dplyr::mutate(value = as.numeric(value)),
aes(x=stringr::str_wrap(quant, 10), y=value, fill=variable, group=quant)
) +
geom_bar(stat="identity",position = "identity", na.rm=T) +
theme_bw() +
theme(
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
strip.text = element_text(size = 12),
axis.text.x = element_text(angle=45, vjust=0.5),
legend.position = "top" # "right"
) +
labs(x="Group", y="Average Reporting Delay") +
# scale_fill_viridis_d() +
facet_grid(.~attribute, scales="free_x") +
guides(fill = guide_legend(title="Wave"))
ggsave(age_and_gender_average_delays, file=file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png"), height=3.5, width=10)
system(sprintf("convert %s -trim %s", "Graphs/age_and_gender_average_days.png", "Graphs/age_and_gender_average_days.png"))
ggsave(age_and_gender_average_delays, file=file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png"), height=3.5, width=10)
system(sprintf(
"convert %s -trim %s",
file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png"),
file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png")
))
age_and_gender_average_delays <- ggplot(
average_values |>
dplyr::rename(
"First" = wave_1_report_delay,
"Second" = wave_2_report_delay,
"Third" = wave_3_report_delay,
"Both" = total_report_delay,
quant = value
) %>%
dplyr::mutate(attribute = recode(attribute,  "gender"="Gender", "age"="Age")) %>%
melt(., id.vars=c("quant", "attribute")) |>
dplyr::relocate(attribute, quant) |>
dplyr::filter(attribute %in% c("Age", "Gender") & variable!="Both" & quant!="NOT LISTED, PLEASE SPECIFY") |>
dplyr::mutate(value = as.numeric(value)),
aes(x=stringr::str_wrap(quant, 10), y=value, fill=variable, group=quant)
) +
geom_bar(stat="identity",position = "identity", na.rm=T) +
theme_bw() +
theme(
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
strip.text = element_text(size = 12),
axis.text.x = element_text(angle=45, vjust=0.5),
legend.position = "top" # "right"
) +
labs(x="Group", y="Average Reporting Delay") +
# scale_fill_viridis_d() +
facet_grid(.~attribute, scales="free_x") +
guides(fill = guide_legend(title="Wave"))
age_and_gender_average_delays
average_values |>
dplyr::rename(
"First" = wave_1_report_delay,
"Second" = wave_2_report_delay,
"Third" = wave_3_report_delay,
"Both" = total_report_delay,
quant = value
) %>%
dplyr::mutate(attribute = recode(attribute,  "gender"="Gender", "age"="Age")) %>%
melt(., id.vars=c("quant", "attribute")) |>
dplyr::relocate(attribute, quant) |>
dplyr::filter(attribute %in% c("Age", "Gender") & variable!="Both" & quant!="NOT LISTED, PLEASE SPECIFY") |>
dplyr::mutate(value = as.numeric(value))
age_and_gender_average_delays <- ggplot(
average_values |>
dplyr::rename(
"First" = wave_1_report_delay,
"Second" = wave_2_report_delay,
"Third" = wave_3_report_delay,
"Both" = total_report_delay,
quant = value
) %>%
dplyr::mutate(attribute = recode(attribute,  "gender"="Gender", "age"="Age")) %>%
melt(., id.vars=c("quant", "attribute")) |>
dplyr::filter(attribute %in% c("Age", "Gender") & variable!="Both" & quant!="NOT LISTED, PLEASE SPECIFY") |>
dplyr::mutate(
value = as.numeric(value),
quant = quant %>% dplyr::recode("female"="Female", "male"="Male", "noncis"="Other")
),
aes(x=stringr::str_wrap(quant, 10), y=value, fill=variable, group=quant)
) +
geom_bar(stat="identity",position = "identity", na.rm=T) +
theme_bw() +
theme(
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
strip.text = element_text(size = 12),
axis.text.x = element_text(angle=45, vjust=0.5),
legend.position = "top" # "right"
) +
labs(x="Group", y="Average Reporting Delay") +
# scale_fill_viridis_d() +
facet_grid(.~attribute, scales="free_x") +
guides(fill = guide_legend(title="Wave"))
ggsave(age_and_gender_average_delays, file=file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png"), height=7, width=15)
system(sprintf(
"convert %s -trim %s",
file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png"),
file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png")
))
age_and_gender_average_delays
age_and_gender_average_delays <- ggplot(
average_values |>
dplyr::rename(
"First" = wave_1_report_delay,
"Second" = wave_2_report_delay,
"Third" = wave_3_report_delay,
"Both" = total_report_delay,
quant = value
) %>%
dplyr::mutate(attribute = recode(attribute,  "gender"="Gender", "age"="Age")) %>%
melt(., id.vars=c("quant", "attribute")) |>
dplyr::filter(attribute %in% c("Age", "Gender") & variable!="Both" & quant!="NOT LISTED, PLEASE SPECIFY") |>
dplyr::mutate(
value = as.numeric(value),
quant = quant %>% dplyr::recode("female"="Female", "male"="Male", "noncis"="Other")
),
aes(x=stringr::str_wrap(quant, 10), y=value, fill=variable, group=quant)
) +
geom_bar(stat="identity",position = "identity", na.rm=T) +
theme_bw() +
theme(
axis.title = element_text(size = 13),
axis.text = element_text(size = 13),
strip.text = element_text(size = 13),
axis.text.x = element_text(angle=45, vjust=0.5),
legend.position = "top" # "right"
) +
labs(x="Group", y="Average Reporting Delay") +
# scale_fill_viridis_d() +
facet_grid(.~attribute, scales="free_x") +
guides(fill = guide_legend(title="Wave"))
a
ggsave(age_and_gender_average_delays, file=file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png"), height=7, width=15)
system(sprintf(
"convert %s -trim %s",
file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png"),
file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png")
))
age_and_gender_average_delays <- ggplot(
average_values |>
dplyr::rename(
"First" = wave_1_report_delay,
"Second" = wave_2_report_delay,
"Third" = wave_3_report_delay,
"Both" = total_report_delay,
quant = value
) %>%
dplyr::mutate(attribute = recode(attribute,  "gender"="Gender", "age"="Age")) %>%
melt(., id.vars=c("quant", "attribute")) |>
dplyr::filter(attribute %in% c("Age", "Gender") & variable!="Both" & quant!="NOT LISTED, PLEASE SPECIFY") |>
dplyr::mutate(
value = as.numeric(value),
quant = quant %>% dplyr::recode("female"="Female", "male"="Male", "noncis"="Other")
),
aes(x=stringr::str_wrap(quant, 10), y=value, fill=variable, group=quant)
) +
geom_bar(stat="identity",position = "identity", na.rm=T) +
theme_bw() +
theme(
axis.title = element_text(size = 13),
axis.text = element_text(size = 13),
strip.text = element_text(size = 13),
axis.text.x = element_text(angle=45, vjust=0.5),
legend.position = "top", # "right"
legend.text = element_text(size=13)
) +
labs(x="Group", y="Average Reporting Delay") +
# scale_fill_viridis_d() +
facet_grid(.~attribute, scales="free_x") +
guides(fill = guide_legend(title="Wave"))
ggsave(age_and_gender_average_delays, file=file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png"), height=7, width=15)
system(sprintf(
"convert %s -trim %s",
file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png"),
file.path(PROJECT_FOLDER, "Graphs/age_and_gender_average_days.png")
))
age_and_gender_average_delays
wave_kruskal_test
gender_tests
wave_kruskal_test
age_tests
exp_fit
weib_fit
# NEIGHBOURHOOD TESTS
{
neighbourhood_tests <- list()
# Kruskal-Wallis test to see whether there's a difference between age groups
neighbourhood_tests[["kruskal"]] <- rbind(
raw_fsa_data[wave==1, kruskal.test(reporting_delay ~ neighbourhood_number)] |> fix_kruskal_list() |> dplyr::mutate(wave=1),
raw_fsa_data[wave==2, kruskal.test(reporting_delay ~ neighbourhood_number)] |> fix_kruskal_list() |> dplyr::mutate(wave=2),
raw_fsa_data[wave==3, kruskal.test(reporting_delay ~ neighbourhood_number)] |> fix_kruskal_list() |> dplyr::mutate(wave=3),
raw_fsa_data[,        kruskal.test(reporting_delay ~ neighbourhood_number)] |> fix_kruskal_list() |> dplyr::mutate(wave="all")
) |> dplyr::relocate(wave)
neighbourhood_tests[["dunn"]] <- rbind(
if(neighbourhood_tests$kruskal[wave==1, there_is_a_difference])
raw_fsa_data[wave==1, dunn.test(reporting_delay, neighbourhood_number, kw=FALSE)] |>
quiet() |> fix_dunn_table() |> dplyr::mutate(wave=1),
if(neighbourhood_tests$kruskal[wave==2, there_is_a_difference])
raw_fsa_data[wave==2, dunn.test(reporting_delay, neighbourhood_number, kw=FALSE)] |>
quiet() |> fix_dunn_table() |> dplyr::mutate(wave=2),
if(neighbourhood_tests$kruskal[wave==3, there_is_a_difference])
raw_fsa_data[wave==3, dunn.test(reporting_delay, neighbourhood_number, kw=FALSE)] |>
quiet() |> fix_dunn_table() |> dplyr::mutate(wave=3),
if(neighbourhood_tests$kruskal[wave=="all", there_is_a_difference])
raw_fsa_data[, dunn.test(reporting_delay, neighbourhood_number, kw=FALSE)] |>
quiet() |> fix_dunn_table() |> dplyr::mutate(wave="all")
) |> dplyr::relocate(wave, first, second)
}
neighbourhood_tests
# FSA TESTS
{
fsa_tests <- list()
# Kruskal-Wallis test to see whether there's a difference between age groups
fsa_tests[["kruskal"]] <- rbind(
raw_fsa_data[wave==1, kruskal.test(reporting_delay ~ fsa)] |> fix_kruskal_list() |> dplyr::mutate(wave=1),
raw_fsa_data[wave==2, kruskal.test(reporting_delay ~ fsa)] |> fix_kruskal_list() |> dplyr::mutate(wave=2),
raw_fsa_data[wave==3, kruskal.test(reporting_delay ~ fsa)] |> fix_kruskal_list() |> dplyr::mutate(wave=3),
raw_fsa_data[,        kruskal.test(reporting_delay ~ fsa)] |> fix_kruskal_list() |> dplyr::mutate(wave="all")
) |> dplyr::relocate(wave)
# Dunn's test for post-hoc test
fsa_tests[["dunn"]] <- rbind(
if(fsa_tests$kruskal[wave==1, there_is_a_difference])
raw_fsa_data[wave==1, dunn.test(reporting_delay, fsa, kw=FALSE)] |>
quiet() |> fix_dunn_table() |> dplyr::mutate(wave=1),
if(fsa_tests$kruskal[wave==2, there_is_a_difference])
raw_fsa_data[wave==2, dunn.test(reporting_delay, fsa, kw=FALSE)] |>
quiet() |> fix_dunn_table() |> dplyr::mutate(wave=2),
if(fsa_tests$kruskal[wave==3, there_is_a_difference])
raw_fsa_data[wave==3, dunn.test(reporting_delay, fsa, kw=FALSE)] |>
quiet() |> fix_dunn_table() |> dplyr::mutate(wave=3),
if(fsa_tests$kruskal[wave=="all", there_is_a_difference])
raw_fsa_data[, dunn.test(reporting_delay, fsa, kw=FALSE)] |>
quiet() |> fix_dunn_table() |> dplyr::mutate(wave="all")
) |> dplyr::relocate(wave, first, second)
}
fsa_tests
source("~/Documents/GitHub/MIZ_project/choropleths.R")
PROJECT_FOLDER <- dirname(rstudioapi::getSourceEditorContext()$path)
source("~/Documents/GitHub/MIZ_project/choropleths.R")
rm(list=ls())
library(data.table)
library(ggplot2)
# library(viridis)
library(vistime)
library(plotly)
# library(RColorBrewer)
# library(stringr)
# library(sf)
# library(forcats)
# library(ggpubr)
# library(gganimate)
# library(tidyr)
# library(future)
# library(gapminder)
# library(av)
# library(transformr)
# library(foreach)
# library(doParallel)
PROJECT_FOLDER <- dirname(rstudioapi::getSourceEditorContext()$path)
# PROJECT_FOLDER <- '/home/bren/Documents/GitHub/MIZ_project'
source(file.path(PROJECT_FOLDER, "function_header.R"))
setwd(PROJECT_FOLDER)
rm(list=ls())
library(data.table)
library(ggplot2)
# library(viridis)
library(vistime)
library(plotly)
# library(RColorBrewer)
# library(stringr)
# library(sf)
# library(forcats)
# library(ggpubr)
# library(gganimate)
# library(tidyr)
# library(future)
# library(gapminder)
# library(av)
# library(transformr)
# library(foreach)
# library(doParallel)
# PROJECT_FOLDER <- dirname(rstudioapi::getSourceEditorContext()$path)
PROJECT_FOLDER <- '/home/bren/Documents/GitHub/MIZ_project'
source(file.path(PROJECT_FOLDER, "function_header.R"))
setwd(PROJECT_FOLDER)
source(file.path(PROJECT_FOLDER, "function_header.R"))
PROJECT_FOLDER
file.path(PROJECT_FOLDER, "function_header.R")
file.path(PROJECT_FOLDER, "function_header.R") %>% source
source("~/Documents/GitHub/MIZ_project/function_header.R")
source("~/Documents/GitHub/MIZ_project/refresh_all_data.R")
source("~/Documents/GitHub/MIZ_project/function_header.R")
rm(list=ls())
library(data.table)
library(ggplot2)
# library(viridis)
library(vistime)
library(plotly)
# library(RColorBrewer)
# library(stringr)
# library(sf)
# library(forcats)
# library(ggpubr)
# library(gganimate)
# library(tidyr)
# library(future)
# library(gapminder)
# library(av)
# library(transformr)
# library(foreach)
# library(doParallel)
# PROJECT_FOLDER <- dirname(rstudioapi::getSourceEditorContext()$path)
PROJECT_FOLDER <- '/home/bren/Documents/GitHub/MIZ_project'
source(file.path(PROJECT_FOLDER, "function_header.R"))
setwd(PROJECT_FOLDER)
update.packages("sf")
update.packages()
