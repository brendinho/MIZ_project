second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "$\\beta_i$", "$p$-value","$\\beta_i$", "$p$-value","$\\beta_i$", "$p$-value", "Bin", "low aR threshold", "high aR threshold"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
provinces_regressions[province=="Quebec"] %>%
dplyr::mutate(
first_wave_value = round(first_wave_value, 4),
first_wave_p = round(first_wave_p, 3),
second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "$\\beta_i$", "$p$-value","$\\beta_i$", "$p$-value","$\\beta_i$", "$p$-value", "Bin", "low aR threshold", "high aR threshold"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
provinces_regressions[province=="Saskatchewan"] %>%
dplyr::mutate(
first_wave_value = round(first_wave_value, 4),
first_wave_p = round(first_wave_p, 3),
second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "$\\beta_i$", "$p$-value","$\\beta_i$", "$p$-value","$\\beta_i$", "$p$-value", "Bin", "low aR threshold", "high aR threshold"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
Total_Data[aR_score == max(aR_score)]
Total_Data[, max(aR_score)]
Total_Data[aR_score == max(aR_score, na.rm=T)]
Total_Data[aR_score>290]
Total_Data[, sort(uniue(aR_score))]
Total_Data[, sort(unique(aR_score))]
provinces_regressions <- data.table()
the_bins <- sort(c(0, optbin(Total_Data$mR_score, 5, na.rm=TRUE)$thr))
the_bins <- cbind(the_bins[-length(the_bins)], the_bins[-1])
for(bin in 1:nrow(the_bins))
{
bot_thr <- the_bins[bin,1]
top_thr <- the_bins[bin,2]
Total_Data_Here <- Total_Data %>% dplyr::filter(province == PROVINCE) %>% dplyr::filter(bot_thr<=mR_score & mR_score<=top_thr)
if(nrow(Total_Data_Here) == 0) next
for(PROVINCE in c("Ontario", "British Columbia", "Quebec", "Saskatchewan"))
{
first_wave_regression <- summary(lm(
formula = first_wave_proportion ~ families_with_no_children + families_with_children_of_size_2_or_smaller + families_with_children_of_size_3_or_larger +
total_commuters +
# population_density +
aR_score,
data = Total_Data_Here
))
second_wave_regression <- summary(lm(
formula = second_wave_proportion ~ families_with_no_children + families_with_children_of_size_2_or_smaller + families_with_children_of_size_3_or_larger +
total_commuters +
# population_density +
aR_score,
data = Total_Data_Here
))
total_regression <- summary(lm(
formula = proportion ~ families_with_no_children + families_with_children_of_size_2_or_smaller + families_with_children_of_size_3_or_larger +
aR_score +
total_commuters +
# population_density +
wave,
data = rbind(
Total_Data_Here %>%
dplyr::select(!starts_with("second_wave_")) %>%
dplyr::select(-total_cases, -interpeak_distance) %>%
dplyr::rename_with(function(x) gsub("first_wave_", "", x)) %>%
dplyr::mutate(wave=1),
Total_Data_Here %>%
dplyr::select(!starts_with("first_wave_")) %>%
dplyr::select(-total_cases, -interpeak_distance) %>%
dplyr::rename_with(function(x) gsub("second_wave_", "", x)) %>%
dplyr::mutate(wave=2)
)
))
provinces_regressions <- rbind(
provinces_regressions,
cbind(
Reduce(
function(x,y) merge(x=x, y=y, by="vars", all=TRUE),
list(
data.table(province=PROVINCE, vars=rownames(first_wave_regression$coefficients), first_wave_regression$coefficients) %>%
dplyr::select(-`Std. Error`, -`t value`) %>%
dplyr::rename(first_wave_value=Estimate, first_wave_p=`Pr(>|t|)`),
data.table(province=PROVINCE, vars=rownames(second_wave_regression$coefficients), second_wave_regression$coefficients) %>%
dplyr::select(-`Std. Error`, -`t value`) %>%
dplyr::rename(second_wave_value=Estimate, second_wave_p=`Pr(>|t|)`),
data.table(province=PROVINCE, vars=rownames(total_regression$coefficients), total_regression$coefficients) %>%
dplyr::select(-`Std. Error`, -`t value`) %>%
dplyr::rename(total_value=Estimate, total_p=`Pr(>|t|)`)
)
),
data.table(bin_num=bin, low_thr=bot_thr, hig_thr=top_thr)
)
)
}
}
#     if(x == "aR_score") return("$\\aR$")
#     if(x == "families_with_children_of_size_2_or_smaller") return("$F^c_{\\le2}$")
#     if(x == "families_with_children_of_size_3_or_larger") return("$F^c_{\\ge3}$")
#     if(x == "families_with_no_children") return("$F_0$")
#     if(x == "population_density") return("$D$")
#     if(x == "total_commuters") return("$L$")
#     if(x == "wave") return("$x$")
#     if(x == "(Intercept)") return("Intercept")
#     return(x)
# }
var_names <- function(x)
{
if(x == "aR_score") return("aR")
if(x == "families_with_children_of_size_2_or_smaller") return("$FF2$")
if(x == "families_with_children_of_size_3_or_larger") return("$F3$")
if(x == "families_with_no_children") return("$F0$")
if(x == "population_density") return("$D$")
if(x == "total_commuters") return("$L$")
if(x == "wave") return("$x$")
if(x == "(Intercept)") return("Intercept")
return(x)
}
provinces_regressions[province=="Saskatchewan"] %>%
dplyr::mutate(
first_wave_value = round(first_wave_value, 4),
first_wave_p = round(first_wave_p, 3),
second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "$\\beta_i$", "$p$-value","$\\beta_i$", "$p$-value","$\\beta_i$", "$p$-value", "Bin", "low aR threshold", "high aR threshold"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
provinces_regressions[province=="Saskatchewan"] %>%
dplyr::mutate(
first_wave_value = round(first_wave_value, 4),
first_wave_p = round(first_wave_p, 3),
second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "beta", "p-value","beta", "p-value","beta", "p-value", "Bin", "low aR threshold", "high aR threshold"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
#     if(x == "aR_score") return("$\\aR$")
#     if(x == "families_with_children_of_size_2_or_smaller") return("$F^c_{\\le2}$")
#     if(x == "families_with_children_of_size_3_or_larger") return("$F^c_{\\ge3}$")
#     if(x == "families_with_no_children") return("$F_0$")
#     if(x == "population_density") return("$D$")
#     if(x == "total_commuters") return("$L$")
#     if(x == "wave") return("$x$")
#     if(x == "(Intercept)") return("Intercept")
#     return(x)
# }
var_names <- function(x)
{
if(x == "aR_score") return("aR")
if(x == "families_with_children_of_size_2_or_smaller") return("F2")
if(x == "families_with_children_of_size_3_or_larger") return("F3")
if(x == "families_with_no_children") return("F0")
if(x == "population_density") return("D")
if(x == "total_commuters") return("L")
if(x == "wave") return("x")
if(x == "(Intercept)") return("Intercept")
return(x)
}
provinces_regressions[province=="Saskatchewan"] %>%
dplyr::mutate(
first_wave_value = round(first_wave_value, 4),
first_wave_p = round(first_wave_p, 3),
second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "beta", "p-value","beta", "p-value","beta", "p-value", "Bin", "low aR threshold", "high aR threshold"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
provinces_regressions[province=="Saskatchewan"] %>%
dplyr::mutate(
first_wave_value = round(first_wave_value, 4),
first_wave_p = round(first_wave_p, 3),
second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province,
`first wave` = first_wave_value,
`first wave` = first_wave_p,
`second wave` = second_wave_value,
`second wave` = second_wave_p
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "beta", "p-value","beta", "p-value","beta", "p-value", "Bin", "low aR threshold", "high aR threshold"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
provinces_regressions[province=="Saskatchewan"] %>%
dplyr::mutate(
first_wave_value = round(first_wave_value, 4),
first_wave_p = round(first_wave_p, 3),
second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province,
`first wave` = first_wave_value,
`first wave ` = first_wave_p,
`second wave` = second_wave_value,
`second wave ` = second_wave_p
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "beta", "p-value","beta", "p-value","beta", "p-value", "Bin", "low aR threshold", "high aR threshold"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
the_bins <- sort(c(0, optbin(Total_Data$aR_score, 5, na.rm=TRUE)$thr))
the_bins
provinces_regressions <- data.table()
the_bins <- sort(c(0, optbin(Total_Data$aR_score, 5, na.rm=TRUE)$thr))
the_bins <- cbind(the_bins[-length(the_bins)], the_bins[-1])
for(bin in 1:nrow(the_bins))
{
bot_thr <- the_bins[bin,1]
top_thr <- the_bins[bin,2]
Total_Data_Here <- Total_Data %>% dplyr::filter(province == PROVINCE) %>% dplyr::filter(bot_thr<=mR_score & mR_score<=top_thr)
if(nrow(Total_Data_Here) == 0) next
for(PROVINCE in c("Ontario", "British Columbia", "Quebec", "Saskatchewan"))
{
first_wave_regression <- summary(lm(
formula = first_wave_proportion ~ families_with_no_children + families_with_children_of_size_2_or_smaller + families_with_children_of_size_3_or_larger +
total_commuters +
# population_density +
aR_score,
data = Total_Data_Here
))
second_wave_regression <- summary(lm(
formula = second_wave_proportion ~ families_with_no_children + families_with_children_of_size_2_or_smaller + families_with_children_of_size_3_or_larger +
total_commuters +
# population_density +
aR_score,
data = Total_Data_Here
))
total_regression <- summary(lm(
formula = proportion ~ families_with_no_children + families_with_children_of_size_2_or_smaller + families_with_children_of_size_3_or_larger +
aR_score +
total_commuters +
# population_density +
wave,
data = rbind(
Total_Data_Here %>%
dplyr::select(!starts_with("second_wave_")) %>%
dplyr::select(-total_cases, -interpeak_distance) %>%
dplyr::rename_with(function(x) gsub("first_wave_", "", x)) %>%
dplyr::mutate(wave=1),
Total_Data_Here %>%
dplyr::select(!starts_with("first_wave_")) %>%
dplyr::select(-total_cases, -interpeak_distance) %>%
dplyr::rename_with(function(x) gsub("second_wave_", "", x)) %>%
dplyr::mutate(wave=2)
)
))
provinces_regressions <- rbind(
provinces_regressions,
cbind(
Reduce(
function(x,y) merge(x=x, y=y, by="vars", all=TRUE),
list(
data.table(province=PROVINCE, vars=rownames(first_wave_regression$coefficients), first_wave_regression$coefficients) %>%
dplyr::select(-`Std. Error`, -`t value`) %>%
dplyr::rename(first_wave_value=Estimate, first_wave_p=`Pr(>|t|)`),
data.table(province=PROVINCE, vars=rownames(second_wave_regression$coefficients), second_wave_regression$coefficients) %>%
dplyr::select(-`Std. Error`, -`t value`) %>%
dplyr::rename(second_wave_value=Estimate, second_wave_p=`Pr(>|t|)`),
data.table(province=PROVINCE, vars=rownames(total_regression$coefficients), total_regression$coefficients) %>%
dplyr::select(-`Std. Error`, -`t value`) %>%
dplyr::rename(total_value=Estimate, total_p=`Pr(>|t|)`)
)
),
data.table(bin_num=bin, low_thr=bot_thr, hig_thr=top_thr)
)
)
}
}
provinces_regressions[province=="Saskatchewan"] %>%
dplyr::mutate(
first_wave_value = round(first_wave_value, 4),
first_wave_p = round(first_wave_p, 3),
second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province,
`first wave` = first_wave_value,
`first wave ` = first_wave_p,
`second wave` = second_wave_value,
`second wave ` = second_wave_p
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "beta", "p-value","beta", "p-value","beta", "p-value", "Bin", "bottom aR", "top aR"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
provinces_regressions[province=="Quebec"] %>%
dplyr::mutate(
first_wave_value = round(first_wave_value, 4),
first_wave_p = round(first_wave_p, 3),
second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province,
`first wave` = first_wave_value,
`first wave ` = first_wave_p,
`second wave` = second_wave_value,
`second wave ` = second_wave_p
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "beta", "p-value","beta", "p-value","beta", "p-value", "Bin", "bottom aR", "top aR"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
rovinces_regressions[province=="British Columbia"] %>%
dplyr::mutate(
first_wave_value = round(first_wave_value, 4),
first_wave_p = round(first_wave_p, 3),
second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province,
`first wave` = first_wave_value,
`first wave ` = first_wave_p,
`second wave` = second_wave_value,
`second wave ` = second_wave_p
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "beta", "p-value","beta", "p-value","beta", "p-value", "Bin", "bottom aR", "top aR"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
provinces_regressions[province=="British Columbia"] %>%
dplyr::mutate(
first_wave_value = round(first_wave_value, 4),
first_wave_p = round(first_wave_p, 3),
second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province,
`first wave` = first_wave_value,
`first wave ` = first_wave_p,
`second wave` = second_wave_value,
`second wave ` = second_wave_p
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "beta", "p-value","beta", "p-value","beta", "p-value", "Bin", "bottom aR", "top aR"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
provinces_regressions[province=="Ontario"] %>%
dplyr::mutate(
first_wave_value = round(first_wave_value, 4),
first_wave_p = round(first_wave_p, 3),
second_wave_value = round(second_wave_value, 4),
second_wave_p = round(second_wave_p, 3),
total_value = round(total_value, 4),
total_p = round(total_p, 3),
province = coalesce(province, province.x, province.y)
) %>%
dplyr::rename(
Parameters = vars,
Province = province,
`first wave` = first_wave_value,
`first wave ` = first_wave_p,
`second wave` = second_wave_value,
`second wave ` = second_wave_p
) %>%
dplyr::select(-province.x, -province.y) %>%
dplyr::relocate(Province, Parameters) %>%
rbind(list("Province", "Parameters", "beta", "p-value","beta", "p-value","beta", "p-value", "Bin", "bottom aR", "top aR"), .) %>%
dplyr::mutate(Parameters = unlist(lapply(Parameters, var_names))) %>%
xtable(.)
canada_first_wave <- summary(lm(
formula = first_wave_proportion ~ families_with_no_children + families_with_children_of_size_2_or_smaller + families_with_children_of_size_3_or_larger +
total_commuters +
population_density +
aR_score,
# index_of_remoteness,
data = Total_Data[164<=aR_score & aR_score<=264]
))
canada_first_wave
Total_Data[province=="Ontario"]
Total_Data[province=="Ontario", HR]
Total_Data[HR == "Toronto"]
Total_Data[HR == "Vancouver"]
Total_Data[province=="Ontario" & aR_score==3]
Total_Data[province=="British Columbia" & aR_score==3]
Total_Data[num_csd>=3]
Total_Data[num_csds>=3]
Total_Data %>% dplyr::select(HR, num_csds)
Total_Data %>% dplyr::select(province, HR, num_csds)
Total_Data %>% dplyr::select(province, HR, num_csds) %>% tibble()
Total_Data %>% dplyr::select(province, HR, num_csds) %>% tibble() %>% print(n=150)
Total_Data[HR == "Central East", aR_score]
Total_Data[HR == "Central East", aR_score/num_csds]
Total_Data[HR == "Central East"]
Regions
Regions <- readRDS(sprintf("%s/CaseDataTables/Regions.rda", PROJECT_FOLDER))
Regions[HR=="Central East"]
names(Regions)
Regions %>% dplyr::filter(HR == "Central East")
Regions %>% dplyr::filter(HR == "Central East") %>% nrow
data.table(Regions %>% dplyr::filter(HR == "Central East"))
data.table(Regions %>% dplyr::filter(HR == "Central East"))[, mean(aR_score)]
data.table(Regions %>% dplyr::filter(HR == "Central East"))[, mean(aR_score, na.rm=T)]
data.table(Regions %>% dplyr::filter(HR == "Central East"))[, max(aR_score, na.rm=T)]
data.table(Regions %>% dplyr::filter(HR == "Central East"))[, min(aR_score, na.rm=T)]
data.table(Regions %>% dplyr::filter(HR == "Central East"))[aR_score == min(aR_score, na.rm=T)]
data.table(Regions %>% dplyr::filter(HR == "Central East"))[aR_score == min(aR_score, na.rm=T)]fread("https://www.alberta.ca/data/stats/covid-19-alberta-statistics-data.csv")
fread("https://www.alberta.ca/data/stats/covid-19-alberta-statistics-data.csv")
Total_Data
names(Total_Data)
names(Regions)
data.table(Regions)[, sum(mR_score*population)/sum(population), by=.(HR)]
data.table(Regions)[, sum(mR_score*population, na.rm=T)/sum(population, na.rm=T), by=.(HR)]
data.table(Regions)[, sum(mR_score*population, na.rm=T)/sum(population, na.rm=T), by=.(HR)] %>% tibble %>% print(n=110)
data.table(Regions)[, sum(mR_score*population, na.rm=T)/sum(population, na.rm=T), by=.(HR)] %>% tibble %>% print(n=110) %>%arrange(HR)
data.table(Regions)[, sum(mR_score*population, na.rm=T)/sum(population, na.rm=T), by=.(HR)] %>% tibble %>% arrange(HR) %>% print(n=110)
data.table(Regions)[, sum(mR_score*population, na.rm=T)/sum(population, na.rm=T), by=.(HR)] %>% tibble %>% arrange(HR) %>% print(n=110)
data.table(Regions)[, sum(mR_score*population, na.rm=T)/sum(population, na.rm=T), by=.(province, HR)] %>% tibble %>% arrange(HR) %>% print(n=110)
Total_Data[province=="Quebec"]
nrow(Total_Data[province=="Quebec"])
nrow(Regions[province=="Quebec"])
data.table(Regions)[province=="Quebec", sum(mR_score*population, na.rm=T)/sum(population, na.rm=T), by=.(province, HR)] %>% tibble %>% arrange(HR) %>% print(n=110)
data.table(Regions)[province=="Quebec", sum(aR_score*population, na.rm=T)/sum(population, na.rm=T), by=.(province, HR)] %>% tibble %>% arrange(HR) %>% print(n=110)
names(Total_Data)
Total_Data[population_density=max(population_density, na.rm=TRUE)]
Total_Data[population_density==max(population_density, na.rm=TRUE)]
Total_Data[population_density==min(population_density, na.rm=TRUE)]
