function(...) merge(..., all = TRUE, by = c("hr", "province", "hruid")),
list(
Remoteness,
Cumulative_Cases,
Demographic_Data
)) %>%
dplyr::mutate(
hr = factor(hr), hruid = factor(hruid), province = factor(province), pruid = factor(pruid.x),
wave_1_attack_rate = wave_1_cumulative/population,
wave_2_attack_rate = wave_2_cumulative/population,
wave_3_attack_rate = wave_3_cumulative/population,
F0_standardised = z_transform(F0),
F3_standardised = z_transform(F3),
F4_standardised = z_transform(F4),
F0_prop_standardised = z_transform(F0_prop),
F3_prop_standardised = z_transform(F3_prop),
F4_prop_standardised = z_transform(F4_prop),
mean_index_standardised = z_transform(mean_index),
sum_index_standardised = z_transform(sum_index),
weighted_index_standardised = z_transform(weighted_index),
mean_mr_standardised = z_transform(mean_mr),
sum_mr_standardised = z_transform(sum_mr),
weighted_mr_standardised = z_transform(weighted_mr),
population_density_standardised = z_transform(population_density),
total_commuters_standardised = z_transform(total_commuters),
wave_1_standardised = z_transform(wave_1_attack_rate),
wave_2_standardised = z_transform(wave_2_attack_rate),
wave_3_standardised = z_transform(wave_3_attack_rate)
) %>%
dplyr::select(-pruid.x, -pruid.y, -wave_1_cumulative, -wave_2_cumulative, -wave_3_cumulative, -total_cumulative, -wave_4_cumulative) %>%
dplyr::relocate(province, pruid, hr, hruid)
Total_Data[grepl("northwest", tolower(province))]
Total_Data[grepl("northwest", tolower(province))][1]
Total_Data[grepl("northwest", tolower(province))][1] %>% unname
Total_Case_Data[grepl("northwest", tolower(province))][1]
fread(sprintf("%s/CaseDataTables/Total_Case_Data.csv", PROJECT_FOLDER))
fread(sprintf("%s/CaseDataTables/Total_Case_Data.csv", PROJECT_FOLDER)) %>% filter(grepl("northwest", tolower(province)))
Regions %>% filter(grepl("northwest", tolower(province)))
Demographic_Data <- Regions %>%
mutate(csdname = coalesce(region, csdname)) %>%
select(-population_density, -geometry, -num_csds, -ar_score, -mr_score, -class, -index_of_remoteness, -region, -pr_uid) %>%
dplyr::mutate(
total_commuters = people_commuting_within_csd + people_commuting_within_cd_but_not_csd +
people_commuting_within_province_but_not_cd + people_commuting_outside_province,
F0 = couples_with_0_children + people_not_in_census_families,
F3 = singles_with_1_child + singles_with_2_children + couples_with_1_child,
F4 = couples_with_2_children + couples_with_3_or_more_children + singles_with_3_or_more_children,
F0_prop = F0/(F0+F3+F4),
F3_prop = F3/(F0+F3+F4),
F4_prop = F4/(F0+F3+F4),
F_wo_C = F0,
F_with_C = F3 + F4
) %>%
dplyr::filter(!is.na(F0_prop) & !is.na(F3_prop) & !is.na(F4_prop)) %>%
.[,
lapply(.SD, sum, na.rm=TRUE),
.SDcols = setdiff(names(.), c("csduid", "csdname", "province", "pruid", "hr", "hruid")),
by=.(hr, hruid, province, pruid)
] %>%
dplyr::mutate(population_density = population/area_sq_km)
Demographic_Data[grepl("northwest", tolower(province))][1]
Remoteness <- Regions[, .(
mean_index = meann(index_of_remoteness),
sum_index = summ(index_of_remoteness),
weighted_index = summ(index_of_remoteness*population)/summ(population),
mean_mr = meann(mr_score),
sum_mr = summ(mr_score),
weighted_mr = summ(mr_score*population)/summ(population)
), by=.(province, pruid, hr, hruid)]
Cumulative_Cases <- Total_Case_Data[hr != "Not Reported", .(
wave_1_cumulative = summ(.SD[wave==1]$cases),
wave_2_cumulative = summ(.SD[wave==2]$cases),
wave_3_cumulative = summ(.SD[wave==3]$cases),
wave_4_cumulative = summ(.SD[wave==4]$cases),
total_cumulative = summ(cases)
), by=.(hr, province, hruid)] %>%
dplyr::filter(
!is.na(wave_1_cumulative) &
!is.na(wave_2_cumulative) &
!is.na(wave_3_cumulative)
)
Cumulative_Cases[grepl("northwest", tolower(province))][1]
Total_Data[grepl("northwest", tolower(province))][1]
Total_Data <- Reduce(
function(...) merge(..., all = TRUE, by = c("hr", "province", "hruid")),
list(
Remoteness,
Cumulative_Cases,
Demographic_Data
)) %>%
dplyr::mutate(
hr = factor(hr), hruid = factor(hruid), province = factor(province), pruid = factor(pruid.x),
wave_1_attack_rate = wave_1_cumulative/population,
wave_2_attack_rate = wave_2_cumulative/population,
wave_3_attack_rate = wave_3_cumulative/population,
F0_standardised = z_transform(F0),
F3_standardised = z_transform(F3),
F4_standardised = z_transform(F4),
F0_prop_standardised = z_transform(F0_prop),
F3_prop_standardised = z_transform(F3_prop),
F4_prop_standardised = z_transform(F4_prop),
mean_index_standardised = z_transform(mean_index),
sum_index_standardised = z_transform(sum_index),
weighted_index_standardised = z_transform(weighted_index),
mean_mr_standardised = z_transform(mean_mr),
sum_mr_standardised = z_transform(sum_mr),
weighted_mr_standardised = z_transform(weighted_mr),
population_density_standardised = z_transform(population_density),
total_commuters_standardised = z_transform(total_commuters),
wave_1_standardised = z_transform(wave_1_attack_rate),
wave_2_standardised = z_transform(wave_2_attack_rate),
wave_3_standardised = z_transform(wave_3_attack_rate)
) %>%
dplyr::select(-pruid.x, -pruid.y, -wave_1_cumulative, -wave_2_cumulative, -wave_3_cumulative, -total_cumulative, -wave_4_cumulative) %>%
dplyr::relocate(province, pruid, hr, hruid)
Total_Data[grepl("northwest", tolower(province))][1]
Cumulative_Cases[grepl("northwest", tolower(province))][1]
UofT_api_case_data <- jsonlite::fromJSON("https://api.opencovid.ca/timeseries?stat=cases&loc=hr")$cases %>%
dplyr::mutate(date_report=as.Date(date_report, format="%d-%m-%Y"))
UofT_api_case_data %>%
dplyr::filter(province == "NWT") %>%
dplyr::select(province, date_report, health_region, cases) %>%
dplyr::rename(date=date_report, HR=health_region) %>%
dplyr::mutate(date=as.Date(date), province="Northwest Territories") %>%
# add_wave_numbers() %>% .[['cases']] %>%
data.table()
HR_info_mine
HR_info_mine[grepl("Northwest", Proviunce)]
HR_info_mine[grepl("Northwest", Province)]
HR_info_StatCan[grepl("Northwest", Province)]
Total_Case_Data <- fread(sprintf("%s/CaseDataTables/Total_Case_Data.csv", PROJECT_FOLDER)) %>%
dplyr::rename_with(tolower) %>%
dplyr::mutate(wave=4) %>%
dplyr::mutate(wave = case_when(
date < as.Date("2020-07-15") ~ 1,
date < as.Date("2021-02-15") ~ 2,
date < as.Date("2021-07-15") ~ 3,
date < max(date) ~ 4
)) %>%
dplyr::filter(wave < 4) %>%
dplyr::rename(hruid = hruid2018)
Total_Case_Data
Total_Case_Data[grelp("Northwest", province)]
Total_Case_Data[grepl("Northwest", province)]
NT_cases <- UofT_api_case_data %>%
dplyr::filter(province == "NWT") %>%
dplyr::select(province, date_report, health_region, cases) %>%
dplyr::rename(date=date_report, HR=health_region) %>%
dplyr::mutate(date=as.Date(date), province="Northwest Territories") %>%
# add_wave_numbers() %>% .[['cases']] %>%
data.table()
NT_cases
NT_cases %>% mutate(HR = "Northwest Territories")
source("~/Documents/GitHub/MIZ_project/refresh_all_data.R")
Regions %>% str()
Regions %>%
data.table %>%
.[, .(geometry=st_union(geometry) %>% st_cast("MULTIPOLYGON")), by=.(province)] %>%
dplyr::mutate(area_sq_km = as.numeric(st_area(geometry))/1000**2)
writeLines("\nCumulative cases")
Cumul_Cases <- Total_Case_Data[
HR!="Not Reported",
.(
first_wave_cases=sum(.SD[wave==1]$cases, na.rm=T),
second_wave_cases=sum(.SD[wave==2]$cases, na.rm=T),
total_cases=sum(cases, na.rm=T)
),
by=.(HR, province, HRUID2018)
]
writeLines("\nTotal Case Data")
Total_Case_Data <- rbind(BC_cases, QC_cases, MB_cases, SK_cases, ON_cases, AB_cases, NB_cases, NS_cases, NL_cases, PE_cases, NT_cases, YT_cases, NU_cases) %>%
dplyr::mutate(HR = standard_HR_names(HR)) %>%
add_HRUIDs("HR", "province")
fwrite(Total_Case_Data, sprintf("%s/CaseDataTables/Total_Case_Data.csv", PROJECT_FOLDER))
source("~/Documents/GitHub/MIZ_project/refresh_all_data.R")
source("~/Documents/GitHub/MIZ_project/regression_prelims.R")
Total_Case_Data
Total_Case_Data %>% pull(hruid) %>% unique()
Total_Case_Data %>% filter(is.na(hruid))
Total_Case_Data %>% filter(is.na(hruid)) %>% pull(hr)
Total_Case_Data %>% filter(is.na(hruid)) %>% pull(hr) %>% unique
source("~/Documents/GitHub/MIZ_project/regression_prelims.R")
Total_Data
Total_Data %>% filter(grepl("northwest", tolower(province)))
source("~/Documents/GitHub/MIZ_project/lasso_regression.R")
table_with_CI <- rbind(
first_wave_coefficients,
second_wave_coefficients,
third_wave_coefficients #,
# all_waves_coefficients
) %>%
dplyr::mutate(
response.fancy = unlist(lapply(response, function(x){
if(x == "cases") return("First Three Waves")
if(x == "wave_1_attack_rate") return("First Wave")
if(x == "wave_2_attack_rate") return("Second Wave")
if(x == "wave_3_attack_rate") return("Third Wave")
if(x == "attack_rate") return("First Three Waves")
if(x == "wave_1_standardised") return("First Wave")
if(x == "wave_2_standardised") return("Second Wave")
if(x == "wave_3_standardised") return("Third Wave")
if(x == "standardised_attack_rate") return("First Three Waves")
return(x)
})),
response_var = remoteness_covariate
)
fstat_labels <- table_with_CI[,
.(lab = sprintf(
"F: %.2f\np: %s",
na.omit(fstat_value),
if(na.omit(fstat_p) > 0.01) round(na.omit(fstat_p), 2) else expression("\u003c0.01")
) ),
by=.(response, response.fancy)
]
lasso_scaling_factor <- max(table_with_CI[, max(abs(CI25))/max(abs(lasso_coefficient))], table_with_CI[, max(abs(CI975))/max(abs(lasso_coefficient))])
Significance_diagram <- ggplot(
table_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::mutate(covariate = factor(covariate, levels=names(display_names)),
aes(x=covariate, y=beta, group=response, colour=signif)
) +
geom_hline(aes(yintercept=0), linetype="dashed", size=1, colour="grey") +
geom_line(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=1, colour="black") +
geom_point(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=3, colour="black") +
scale_y_continuous("Standardised Regression Coefficient", sec.axis = sec_axis(~.*lasso_scaling_factor, name="Lasso Coefficient")) +
geom_errorbar(aes(ymin=CI25, ymax=CI975), size=1, width=0.5) +
geom_point(size=4) +
geom_label(
data=fstat_labels %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))),
aes(label=lab),
x=0.7, y=09*max(table_with_CI$CI975),
inherit.aes=FALSE, size=3.5, fill="grey90"
) +
geom_label(aes(label=sprintf("%.2f", vif)), y=min(table_with_CI$CI25), size=2.5, fill="grey90") +
theme_bw() +
theme(
legend.position = "none",
axis.text = element_text(size=13),
axis.title = element_text(size=13),
strip.text = element_text(size=13),
axis.text.y.right = element_text(colour = "black")
) +
labs(x="Covariates") +
scale_colour_manual(name="signif", values=c(`TRUE`="blue", `FALSE`="red")) +
facet_grid(response.fancy~.) + # , scale="free_y"
scale_x_discrete(labels = display_names)
ggsave(Significance_diagram, file=sprintf("%s/Graphs/new_coefficients_%s.png", PROJECT_FOLDER, remoteness_covariate), width=10, height=7)
all_the_tables_with_CI <- rbind(all_the_tables_with_CI, table_with_CI)
stop()
}
remoteness_covariates_performance <- all_the_tables_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::filter(!grepl("f|population|commuters|intercept|wave", tolower(covariate)))
All_Remoteness_Variables_Performance <- ggplot(remoteness_covariates_performance, aes(x=covariate, y=beta, group=response, colour=signif)) +
facet_grid(response.fancy~.,) +
geom_hline(aes(yintercept=0), linetype="dashed", size=1, colour="grey") +
geom_line(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=1, colour="black") +
geom_point(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=3, colour="black") +
scale_y_continuous("Standardised Regression Coefficient", sec.axis = sec_axis(~.*lasso_scaling_factor, name="Lasso Coefficient")) +
geom_errorbar(aes(ymin=CI25, ymax=CI975), size=1, width=0.5) +
geom_point(size=4) +
geom_label(aes(label=sprintf("%.2f", vif)), y=min(remoteness_covariates_performance$CI25), size=4, fill="grey90") +
theme_bw() +
theme(
legend.position = "none",
axis.text = element_text(size=13),
axis.title = element_text(size=13),
strip.text = element_text(size=13),
panel.spacing = unit(1, "lines")
) +
labs(y="Standardised Regression Coefficient", x="Measures of Remoteness") +
scale_colour_manual(name="signif", values=c(`TRUE`="blue", `FALSE`="red")) +
facet_grid(response.fancy~.,) +
scale_x_discrete(labels = display_names)
ggsave(All_Remoteness_Variables_Performance, file=sprintf("%s/Graphs/remoteness_coefficients.png", PROJECT_FOLDER), width=10, height=8)
ggsave(Significance_diagram, file=sprintf("%s/Graphs/new_coefficients_%s.png", PROJECT_FOLDER, remoteness_covariate), width=10, height=7)
lasso_scaling_factor <- max(table_with_CI[, max(abs(CI25))/max(abs(lasso_coefficient))], table_with_CI[, max(abs(CI975))/max(abs(lasso_coefficient))])
Significance_diagram <- ggplot(
table_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::mutate(covariate = factor(covariate, levels=names(display_names)),
aes(x=covariate, y=beta, group=response, colour=signif)
) +
geom_hline(aes(yintercept=0), linetype="dashed", size=1, colour="grey") +
geom_line(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=1, colour="black") +
geom_point(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=3, colour="black") +
scale_y_continuous("Standardised Regression Coefficient", sec.axis = sec_axis(~.*lasso_scaling_factor, name="Lasso Coefficient")) +
geom_errorbar(aes(ymin=CI25, ymax=CI975), size=1, width=0.5) +
geom_point(size=4) +
geom_label(
data=fstat_labels %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))),
aes(label=lab),
x=0.7, y=09*max(table_with_CI$CI975),
inherit.aes=FALSE, size=3.5, fill="grey90"
) +
geom_label(aes(label=sprintf("%.2f", vif)), y=min(table_with_CI$CI25), size=2.5, fill="grey90") +
theme_bw() +
theme(
legend.position = "none",
axis.text = element_text(size=13),
axis.title = element_text(size=13),
strip.text = element_text(size=13),
axis.text.y.right = element_text(colour = "black")
) +
labs(x="Covariates") +
scale_colour_manual(name="signif", values=c(`TRUE`="blue", `FALSE`="red")) +
facet_grid(response.fancy~.) + # , scale="free_y"
scale_x_discrete(labels = display_names)
ggsave(Significance_diagram, file=sprintf("%s/Graphs/new_coefficients_%s.png", PROJECT_FOLDER, remoteness_covariate), width=10, height=7)
all_the_tables_with_CI <- rbind(all_the_tables_with_CI, table_with_CI)
stop()
}
remoteness_covariates_performance <- all_the_tables_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::filter(!grepl("f|population|commuters|intercept|wave", tolower(covariate)))
All_Remoteness_Variables_Performance <- ggplot(remoteness_covariates_performance, aes(x=covariate, y=beta, group=response, colour=signif)) +
facet_grid(response.fancy~.,) +
geom_hline(aes(yintercept=0), linetype="dashed", size=1, colour="grey") +
geom_line(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=1, colour="black") +
geom_point(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=3, colour="black") +
scale_y_continuous("Standardised Regression Coefficient", sec.axis = sec_axis(~.*lasso_scaling_factor, name="Lasso Coefficient")) +
geom_errorbar(aes(ymin=CI25, ymax=CI975), size=1, width=0.5) +
geom_point(size=4) +
geom_label(aes(label=sprintf("%.2f", vif)), y=min(remoteness_covariates_performance$CI25), size=4, fill="grey90") +
theme_bw() +
theme(
legend.position = "none",
axis.text = element_text(size=13),
axis.title = element_text(size=13),
strip.text = element_text(size=13),
panel.spacing = unit(1, "lines")
) +
labs(y="Standardised Regression Coefficient", x="Measures of Remoteness") +
scale_colour_manual(name="signif", values=c(`TRUE`="blue", `FALSE`="red")) +
facet_grid(response.fancy~.,) +
scale_x_discrete(labels = display_names)
ggsave(All_Remoteness_Variables_Performance, file=sprintf("%s/Graphs/remoteness_coefficients.png", PROJECT_FOLDER), width=10, height=8)
lasso_scaling_factor <- max(table_with_CI[, max(abs(CI25))/max(abs(lasso_coefficient))], table_with_CI[, max(abs(CI975))/max(abs(lasso_coefficient))])
Significance_diagram <- ggplot(
table_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::mutate(covariate = factor(covariate, levels=names(display_names)),
aes(x=covariate, y=beta, group=response, colour=signif)
) +
geom_hline(aes(yintercept=0), linetype="dashed", size=1, colour="grey") +
geom_line(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=1, colour="black") +
geom_point(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=3, colour="black") +
scale_y_continuous("Standardised Regression Coefficient", sec.axis = sec_axis(~.*lasso_scaling_factor, name="Lasso Coefficient")) +
geom_errorbar(aes(ymin=CI25, ymax=CI975), size=1, width=0.5) +
geom_point(size=4) +
geom_label(
data=fstat_labels %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))),
aes(label=lab),
x=0.7, y=09*max(table_with_CI$CI975),
inherit.aes=FALSE, size=3.5, fill="grey90"
) +
geom_label(aes(label=sprintf("%.2f", vif)), y=min(table_with_CI$CI25), size=2.5, fill="grey90") +
theme_bw() +
theme(
legend.position = "none",
axis.text = element_text(size=13),
axis.title = element_text(size=13),
strip.text = element_text(size=13),
axis.text.y.right = element_text(colour = "black")
) +
labs(x="Covariates") +
scale_colour_manual(name="signif", values=c(`TRUE`="blue", `FALSE`="red")) +
facet_grid(response.fancy~.) + # , scale="free_y"
scale_x_discrete(labels = display_names)
ggsave(Significance_diagram, file=sprintf("%s/Graphs/new_coefficients_%s.png", PROJECT_FOLDER, remoteness_covariate), width=10, height=7)
all_the_tables_with_CI <- rbind(all_the_tables_with_CI, table_with_CI)
stop()
}
remoteness_covariates_performance <- all_the_tables_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::filter(!grepl("f|population|commuters|intercept|wave", tolower(covariate)))
All_Remoteness_Variables_Performance <- ggplot(remoteness_covariates_performance, aes(x=covariate, y=beta, group=response, colour=signif)) +
facet_grid(response.fancy~.,) +
geom_hline(aes(yintercept=0), linetype="dashed", size=1, colour="grey") +
geom_line(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=1, colour="black") +
geom_point(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=3, colour="black") +
scale_y_continuous("Standardised Regression Coefficient", sec.axis = sec_axis(~.*lasso_scaling_factor, name="Lasso Coefficient")) +
geom_errorbar(aes(ymin=CI25, ymax=CI975), size=1, width=0.5) +
geom_point(size=4) +
geom_label(aes(label=sprintf("%.2f", vif)), y=min(remoteness_covariates_performance$CI25), size=4, fill="grey90") +
theme_bw() +
theme(
legend.position = "none",
axis.text = element_text(size=13),
axis.title = element_text(size=13),
strip.text = element_text(size=13),
panel.spacing = unit(1, "lines")
) +
labs(y="Standardised Regression Coefficient", x="Measures of Remoteness") +
scale_colour_manual(name="signif", values=c(`TRUE`="blue", `FALSE`="red")) +
facet_grid(response.fancy~.,) +
scale_x_discrete(labels = display_names)
ggsave(All_Remoteness_Variables_Performance, file=sprintf("%s/Graphs/remoteness_coefficients.png", PROJECT_FOLDER), width=10, height=8)
ggplot(
table_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::mutate(covariate = factor(covariate, levels=names(display_names)),
aes(x=covariate, y=beta, group=response, colour=signif)
) +
geom_hline(aes(yintercept=0), linetype="dashed", size=1, colour="grey")
ggplot(
table_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::mutate(covariate = factor(covariate, levels=names(display_names)),
aes(x=covariate, y=beta, group=response, colour=signif)
)
ggplot(
table_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::mutate(covariate = factor(covariate, levels=names(display_names)),
aes(x=covariate, y=beta, group=response, colour=signif)
) +
geom_hline(aes(yintercept=0), linetype="dashed", size=1, colour="grey")
ggplot(
table_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::mutate(covariate = factor(covariate, levels=names(display_names)),
aes(x=covariate, y=beta, group=response, colour=signif)
) +
geom_hline(aes(yintercept=0), linetype="dashed", size=1, colour="grey")
source("~/Documents/GitHub/MIZ_project/lasso_regression.R")
Significance_diagram <- ggplot(
table_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::mutate(covariate = factor(covariate, levels=names(display_names)),
aes(x=covariate, y=beta, group=response, colour=signif)
) +
geom_hline(aes(yintercept=0), linetype="dashed", size=1, colour="grey") +
geom_line(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=1, colour="black") #+
#     geom_point(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=3, colour="black") +
#     scale_y_continuous("Standardised Regression Coefficient", sec.axis = sec_axis(~.*lasso_scaling_factor, name="Lasso Coefficient")) +
#     geom_errorbar(aes(ymin=CI25, ymax=CI975), size=1, width=0.5) +
#     geom_point(size=4) +
#     geom_label(
#         data=fstat_labels %>%
#             dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))),
#         aes(label=lab),
#         x=0.7, y=09*max(table_with_CI$CI975),
#         inherit.aes=FALSE, size=3.5, fill="grey90"
#     ) +
#     geom_label(aes(label=sprintf("%.2f", vif)), y=min(table_with_CI$CI25), size=2.5, fill="grey90") +
#     theme_bw() +
#     theme(
#         legend.position = "none",
#         axis.text = element_text(size=13),
#         axis.title = element_text(size=13),
#         strip.text = element_text(size=13),
#         axis.text.y.right = element_text(colour = "black")
#     ) +
#     labs(x="Covariates") +
#     scale_colour_manual(name="signif", values=c(`TRUE`="blue", `FALSE`="red")) +
#     facet_grid(response.fancy~.) + # , scale="free_y"
#     scale_x_discrete(labels = display_names)
#
#     ggsave(Significance_diagram, file=sprintf("%s/Graphs/new_coefficients_%s.png", PROJECT_FOLDER, remoteness_covariate), width=10, height=7)
#
# all_the_tables_with_CI <- rbind(all_the_tables_with_CI, table_with_CI)
#
stop()
}
table_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::mutate(covariate = factor(covariate, levels=names(display_names))
Significance_diagram <- ggplot(
table_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::mutate(covariate = factor(covariate, levels=names(display_names))),
aes(x=covariate, y=beta, group=response, colour=signif)
) +
geom_hline(aes(yintercept=0), linetype="dashed", size=1, colour="grey") +
geom_line(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=1, colour="black") #+
Significance_diagram <- ggplot(
table_with_CI %>%
dplyr::mutate(response.fancy = factor(response.fancy, levels=c("First Wave", "Second Wave", "Third Wave", "First Three Waves"))) %>%
dplyr::mutate(covariate = factor(covariate, levels=names(display_names))),
aes(x=covariate, y=beta, group=response, colour=signif)
) +
geom_hline(aes(yintercept=0), linetype="dashed", size=1, colour="grey") +
geom_line(aes(x=covariate, y=lasso_coefficient*lasso_scaling_factor, group=1), inherit.aes=FALSE, size=1, colour="black") #+
ggsave(Significance_diagram, file=sprintf("%s/Graphs/new_coefficients_%s.png", PROJECT_FOLDER, remoteness_covariate), width=10, height=7)
source("~/Documents/GitHub/MIZ_project/lasso_regression.R")
table_with_CI <- rbind(
first_wave_coefficients,
second_wave_coefficients,
third_wave_coefficients,
all_waves_coefficients
) %>%
dplyr::mutate(
response.fancy = unlist(lapply(response, function(x){
if(x == "cases") return("First Three Waves")
if(x == "wave_1_attack_rate") return("First Wave")
if(x == "wave_2_attack_rate") return("Second Wave")
if(x == "wave_3_attack_rate") return("Third Wave")
if(x == "attack_rate") return("First Three Waves")
if(x == "wave_1_standardised") return("First Wave")
if(x == "wave_2_standardised") return("Second Wave")
if(x == "wave_3_standardised") return("Third Wave")
if(x == "standardised_attack_rate") return("First Three Waves")
return(x)
})),
response_var = remoteness_covariate
)
source("~/Documents/GitHub/MIZ_project/lasso_regression.R")
source("~/Documents/GitHub/MIZ_project/Intervention_effectiveness/intervention_effectiveness_AB.R")
